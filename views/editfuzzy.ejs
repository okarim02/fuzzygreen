<%- include('partials/headers.ejs') %>
<main>
<section>
    <article>
       <h3> Modifier </h3>
    

        <canvas id="root"></canvas>

        <div id="f1">
            <label>Figure f 1 : </label>
            <select id="fig_1">
                <option value="triangle">Triangle</option>
                <option value="trapezoid">Trapezoid</option>
            </select>
    
            </label>
            <label>x0 : 
                <input type="input" id="x0_id1" value=''>
            </label>
            <label>x1 : 
                <input type="input" id="x1_id1" value=''>
            </label>
            <label>x2 : 
                <input type="input" id="x2_id1" value=''>
            </label>
            <label>x3 : 
                <input type="input" id="x3_id1" value=''>
            </label>
        </div>
        
        <div id="f2">
            <label>Figure f 2 : </label>
            <select id="fig_2">
                <option value="triangle">Triangle</option>
                <option value="trapezoid">Trapezoid</option>
            </select>
    
            </label>
            <label>x0 : 
                <input type="input" id="x0_id2" value=''>
            </label>
            <label>x1 : 
                <input type="input" id="x1_id2" value=''>
            </label>
            <label>x2 : 
                <input type="input" id="x2_id2" value=''>
            </label>
            <label>x3 : 
                <input type="input" id="x3_id2" value=''>
            </label>
        </div>
        
        <div id="f3">
            <label>Figure f 3 : </label>
            <select id="fig_3">
                <option value="triangle">Triangle</option>
                <option value="trapezoid">Trapezoid</option>
            </select>
    
            </label>
            <label>x0 : 
                <input type="input" id="x0_id3" value=''>
            </label>
            <label>x1 : 
                <input type="input" id="x1_id3" value=''>
            </label>
            <label>x2 : 
                <input type="input" id="x2_id3" value=''>
            </label>
            <label>x3 : 
                <input type="input" id="x3_id3" value=''>
            </label>
        </div>
        
        <div>
            <button onclick="draw()">Draw</button>
        </div>

        


    </article>

    <div>
        <button onclick="confirm()">Confirm</button>
    </div>
    

    <a href="/result" > Revenir en arri√®re </a>
</section>
    
</main>

<footer>
    <%- include('partials/footer') %>
</footer>

<script type="text/javascript">
    window.onload = function() {
        init_fuzzy();
    };

    var ctx = document.getElementById("root").getContext("2d");
    ctx.clearRect(0,0,1000,400) ;

    window.setInterval(function(){
        draw();
    }, 1500);
    function draw(){
        let left = document.getElementById("root")
        
        ctx.fillStyle = "red";
        ctx.lineWidth = 4;

        DrawAxes();

        let x0 =fuzzyData['PageSize(Ko)'].membership_function[membership[0]][`x${0}`]
        let x1 =fuzzyData['PageSize(Ko)'].membership_function[membership[0]][`x${1}`]
        let x2 =fuzzyData['PageSize(Ko)'].membership_function[membership[0]][`x${2}`]

        triangle(ctx,x0,x1,x2)
    }
    
    function triangle(ctx,x0,x1,x2){
        ctx.beginPath();
        ctx.moveTo(0, 400);
        ctx.lineTo(x2, 0);
        ctx.lineTo(0, 100);
        ctx.lineTo(0, 0);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
    }


     // DrawAxes draws the X ad Y axes, with tick marks.
   function DrawAxes() {
    ctx.save() ;
    ctx.lineWidth = 2 ;
    // +Y axis
    ctx.beginPath() ;
    ctx.moveTo(XC(0),YC(0)) ;
    ctx.lineTo(XC(0),YC(MaxY())) ;
    ctx.stroke() ;
   
    // -Y axis
    ctx.beginPath() ;
    ctx.moveTo(XC(0),YC(0)) ;
    ctx.lineTo(XC(0),YC(MinY())) ;
    ctx.stroke() ;
   
    // Y axis tick marks
    var delta = YTickDelta() ;
    for (var i = 1; (i * delta) < MaxY() ; ++i) {
     ctx.beginPath() ;
     ctx.moveTo(XC(0) - 5,YC(i * delta)) ;
     ctx.lineTo(XC(0) + 5,YC(i * delta)) ;
     ctx.stroke() ;  
    }
   
    var delta = YTickDelta() ;
    for (var i = 1; (i * delta) > MinY() ; --i) {
     ctx.beginPath() ;
     ctx.moveTo(XC(0) - 5,YC(i * delta)) ;
     ctx.lineTo(XC(0) + 5,YC(i * delta)) ;
     ctx.stroke() ;  
    }  
   
    // +X axis
    ctx.beginPath() ;
    ctx.moveTo(XC(0),YC(0)) ;
    ctx.lineTo(XC(MaxX()),YC(0)) ;
    ctx.stroke() ;
   
    // -X axis
    ctx.beginPath() ;
    ctx.moveTo(XC(0),YC(0)) ;
    ctx.lineTo(XC(MinX()),YC(0)) ;
    ctx.stroke() ;
   
    // X tick marks
    var delta = XTickDelta() ;
    for (var i = 1; (i * delta) < MaxX() ; ++i) {
     ctx.beginPath() ;
     ctx.moveTo(XC(i * delta),YC(0)-5) ;
     ctx.lineTo(XC(i * delta),YC(0)+5) ;
     ctx.stroke() ;  
    }
   
    var delta = XTickDelta() ;
    for (var i = 1; (i * delta) > MinX() ; --i) {
     ctx.beginPath() ;
     ctx.moveTo(XC(i * delta),YC(0)-5) ;
     ctx.lineTo(XC(i * delta),YC(0)+5) ;
     ctx.stroke() ;  
    }
    ctx.restore() ;
   }
        
</script>


</body>
</html>